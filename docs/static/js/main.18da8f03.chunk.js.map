{"version":3,"sources":["types/types.js","actions/cart.js","components/ProductCard.jsx","components/ProductsScreen.jsx","components/Navbar.jsx","components/ProductScreen.jsx","components/CartScreen.jsx","firebase/firebase-config.js","helpers/loadProducts.js","actions/products.js","routers/AppRouter.jsx","reducers/cartReducer.js","reducers/productsReducer.js","store/store.js","AS.jsx","index.js"],"names":["types","addItem","item","type","payload","ProductCard","id","title","description","price","img","dispatch","useDispatch","history","useHistory","className","onClick","push","src","alt","ProductsScreen","products","useSelector","state","onSubmit","e","preventDefault","name","placeholder","autoComplete","map","product","Navbar","to","ProductScreen","useParams","find","goBack","CartScreen","handleReturn","cartItems","cart","total","returnText","length","Number","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","loadProducts","a","collection","get","productsSnap","forEach","snap","data","setProducts","AppRouter","useEffect","items","JSON","parse","localStorage","getItem","setCartItems","setItem","stringify","path","component","exact","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","AS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18da8f03.chunk.js","sourcesContent":["export const types = {\r\n    cartAddItem: '[CART] addItem',\r\n    cartSetItems: '[CART] setItems',\r\n    cartDeleteItems: '[CART] deleteItems',\r\n\r\n    productSetItems: '[PRODUCT] setItems'\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const addItem = (item) => ({\r\n    type: types.cartAddItem,\r\n    payload: item\r\n});\r\n\r\nexport const setCartItems = (cartItems) => ({\r\n    type: types.cartSetItems,\r\n    payload: cartItems\r\n});\r\n\r\nexport const deleteItems = () => ({\r\n    type: types.cartDeleteItems\r\n});","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport { addItem } from '../actions/cart';\r\n\r\n\r\nexport const ProductCard = ({id, title, description, price, img}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleProductView = () => {\r\n        history.push(`/product/${id}`);\r\n    }\r\n\r\n    const handleAddItem = () => {\r\n        dispatch(addItem({\r\n            id,\r\n            description,\r\n            title,\r\n            price,\r\n            img\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" >\r\n            <div className=\"\" onClick={handleProductView}>\r\n                <img src={img} alt=\"dark-galaxy\" className=\"card-img\" />\r\n            </div>\r\n            <div className=\"card-title\">\r\n                <h1>\r\n                    {title}\r\n                </h1>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p>\r\n                    {description}\r\n                </p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                ${price}\r\n            </div>\r\n            <div className=\"card-buttons\">\r\n                <button className=\"card-button primary\">\r\n                    Comprar\r\n                </button>\r\n                <button \r\n                    className=\"card-button secondary\"\r\n                    onClick={handleAddItem}\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport { ProductCard } from './ProductCard';\r\n\r\nexport const ProductsScreen = () => {\r\n\r\n    const {products} = useSelector(state => state.products);\r\n\r\n    return (\r\n        <div className=\"products-screen\">\r\n            <div className=\"search-box\">\r\n                <form \r\n                    className=\"search-form\"\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"search\"\r\n                        placeholder=\"Buscar...\"\r\n                        autoComplete=\"off\"\r\n                        className=\"search-input\"\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"search-btn\"\r\n                    >\r\n                        Buscar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    products.map(product => (\r\n                        <ProductCard \r\n                            key={product.id}\r\n                            {...product}\r\n                        />       \r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <div className=\"navbar\">\r\n            <NavLink to=\"/\" className=\"navbar-link\">\r\n                <h1 className=\"navbar-title\">Apapachate Store</h1>\r\n            </NavLink>\r\n            <NavLink className=\"navbar-link navbar-carrito\" to=\"/cart\">\r\n                <img src=\"./shopping-cart.png\" alt=\"shopping cart\" className=\"cart-icon\" />\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addItem} from '../actions/cart';\r\n\r\nexport const ProductScreen = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleReturn = () => {\r\n        history.goBack();\r\n    }\r\n    const returnText = '< Volver';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {products} = useSelector(state => state.products);\r\n    const {id} = useParams();\r\n    const product = products.find(product => product.id === id);\r\n\r\n    if(!product){\r\n        return (\r\n            <p>\r\n                No hay nada para mostrar\r\n            </p>\r\n        )\r\n    }\r\n\r\n    const handleAddItem = () => {\r\n        dispatch(addItem({\r\n            id: product.id,\r\n            description: product.description,\r\n            title: product.title,\r\n            price: product.price,\r\n            img: product.img\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-screen\">\r\n            <p onClick={handleReturn} className=\"return\"> {returnText} </p>\r\n            <div className=\"product-card\">\r\n                <img src={product.img} alt=\"dark-galaxy\" className=\"product-img\" />\r\n            </div>\r\n            <div className=\"product-info\">\r\n                <div className=\"product-title\">\r\n                    <h1>\r\n                        {product.title}\r\n                    </h1>\r\n                </div>\r\n                <div className=\"product-desc\">\r\n                    <p>\r\n                        {product.description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"product-price\">\r\n                    <strong>\r\n                        ${product.price}\r\n                    </strong>\r\n                </div>\r\n                <div className=\"card-buttons\">\r\n                    <button className=\"card-button primary\">\r\n                        Comprar\r\n                    </button>\r\n                    <button className=\"card-button secondary\" onClick={handleAddItem}>\r\n                        Agregar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { deleteItems } from '../actions/cart';\r\n\r\nexport const CartScreen = () => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleReturn = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const goToBuy = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    const handleDeleteItems = () => {\r\n        dispatch(deleteItems());\r\n    }   \r\n\r\n    const {cartItems} = useSelector(state => state.cart);\r\n    let total = 0;\r\n\r\n    const returnText = '< Volver';\r\n\r\n    if(cartItems.length <= 0){\r\n        return (\r\n            <div className=\"cart-items-empty\">\r\n                <p onClick={handleReturn} className=\"return\"> {returnText} </p>\r\n                <h1 className=\"empty-text\">No hay productos</h1>\r\n                <div className=\"cart-buttons-empty\">\r\n                    <button \r\n                        className=\"card-button btn-block primary\"\r\n                        onClick={goToBuy}\r\n                    >\r\n                        Empezar a comprar\r\n                    </button>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"cart-items\">\r\n                <p onClick={handleReturn} className=\"return\"> {returnText} </p>\r\n                {\r\n                    cartItems.map(item => {\r\n                        total+=Number(item.price);\r\n                        return (\r\n                            <p key={item.id}>{item.title} <strong>${item.price}</strong></p>\r\n                        );\r\n                    })\r\n                }\r\n\r\n                <div className=\"cart-buttons\">\r\n                    <h1 className=\"cart-total\">Total: <strong>${total}</strong></h1>\r\n                    <button \r\n                        className=\"card-button outline-warning\"\r\n                        onClick={handleDeleteItems}\r\n                    >\r\n                        Vaciar carrito\r\n                    </button>\r\n                    <button className=\"card-button secondary\">\r\n                        Pagar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDmkHLRdhIBItHiczxOoi_I3H8VL6WM5fE\",\r\n    authDomain: \"apapachatestore-c7d74.firebaseapp.com\",\r\n    projectId: \"apapachatestore-c7d74\",\r\n    storageBucket: \"apapachatestore-c7d74.appspot.com\",\r\n    messagingSenderId: \"538858354353\",\r\n    appId: \"1:538858354353:web:6f077aa8fc657e499dd490\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport {\r\n    db,\r\n    firebase\r\n}","import {db} from '../firebase/firebase-config';\r\n\r\nexport const loadProducts = async() => {\r\n    const productsSnap = await db.collection('productos').get();\r\n    const products = [];\r\n    productsSnap.forEach(snap => {\r\n        products.push({\r\n            id: snap.id,\r\n            ...snap.data()\r\n        });\r\n    });\r\n    return products;\r\n}","import {db} from '../firebase/firebase-config';\r\nimport { loadProducts } from '../helpers/loadProducts';\r\nimport { types } from '../types/types';\r\n\r\nexport const startGettingProducts = () => {\r\n    return async(dispatch) => {\r\n        const products = await loadProducts();\r\n        dispatch(setProducts(products));\r\n    }\r\n}\r\n\r\nexport const setProducts = (products) => ({\r\n    type: types.productSetItems,\r\n    payload: products\r\n});","import React, {useEffect} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { ProductsScreen } from '../components/ProductsScreen';\r\nimport {Navbar} from '../components/Navbar';\r\nimport { ProductScreen } from '../components/ProductScreen';\r\nimport { CartScreen } from '../components/CartScreen';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { setCartItems } from '../actions/cart';\r\nimport { startGettingProducts } from '../actions/products';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {cartItems} = useSelector(state => state.cart);\r\n\r\n    useEffect(() => {\r\n        const items = JSON.parse(localStorage.getItem('cartItems')) || [];\r\n        dispatch(startGettingProducts());\r\n        dispatch(setCartItems(items));\r\n    },[dispatch]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n    },[cartItems]);\r\n\r\n    return (\r\n        <Router>\r\n            <Navbar className=\"navbar\" />\r\n            <div>\r\n                <Switch>\r\n                    <Route path=\"/product/:id\" component={ProductScreen} />\r\n                    <Route path=\"/cart\" component={CartScreen} />\r\n                    <Route exact path=\"/\" component={ProductsScreen} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    cartItems: []\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case types.cartAddItem:\r\n            return {\r\n                ...state,\r\n                cartItems: [\r\n                    ...state.cartItems,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.cartSetItems:\r\n            return {\r\n                ...state,\r\n                cartItems: action.payload\r\n            }\r\n        case types.cartDeleteItems:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    products: []\r\n}\r\n\r\nexport const productReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case types.productSetItems:\r\n            return {\r\n                ...state,\r\n                products: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import thunk from 'redux-thunk';\r\nimport {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\nimport {cartReducer} from '../reducers/cartReducer';\r\nimport { productReducer } from '../reducers/productsReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    cart: cartReducer,\r\n    products: productReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport './styles/styles.scss';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport {store} from './store/store';\r\n\r\nexport const AS = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AS } from \"./AS\";\n\nReactDOM.render( \n    < AS /> , \n    document.getElementById(\"root\")\n);"],"sourceRoot":""}