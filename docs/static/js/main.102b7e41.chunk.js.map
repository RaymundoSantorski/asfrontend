{"version":3,"sources":["types/types.js","actions/cart.js","components/CartScreen.jsx","components/ProductCard.jsx","components/ProductsScreen.jsx","components/Navbar.jsx","components/ProductScreen.jsx","firebase/firebase-config.js","helpers/loadProducts.js","actions/products.js","routers/AppRouter.jsx","reducers/cartReducer.js","reducers/productsReducer.js","store/store.js","AS.jsx","index.js"],"names":["types","addItem","item","type","payload","incrementItem","cant","CartScreen","history","useHistory","dispatch","useDispatch","handleReturn","goBack","cartItems","useSelector","state","cart","total","returnText","length","className","onClick","push","map","Number","price","title","id","ProductCard","description","img","src","alt","loading","find","ProductsScreen","products","onSubmit","e","preventDefault","name","placeholder","autoComplete","product","Navbar","window","innerWidth","innerHeight","to","ProductScreen","useParams","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","loadProducts","a","collection","get","productsSnap","forEach","snap","data","setProducts","AppRouter","cartStatus","useEffect","items","JSON","parse","localStorage","getItem","setCartItems","setItem","stringify","path","component","exact","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","index","findIndex","store","createStore","applyMiddleware","thunk","AS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.102b7e41.chunk.js","sourcesContent":["export const types = {\r\n    cartAddItem: '[CART] addItem',\r\n    cartSetItems: '[CART] setItems',\r\n    cartDeleteItems: '[CART] deleteItems',\r\n    cartSetStatus: '[CART] setStatus',\r\n    cartIncrementItem: '[CART] incrementItem',\r\n\r\n    productSetItems: '[PRODUCT] setItems'\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const addItem = (item) => ({\r\n    type: types.cartAddItem,\r\n    payload: item\r\n});\r\n\r\nexport const setCartItems = (cartItems) => ({\r\n    type: types.cartSetItems,\r\n    payload: cartItems\r\n});\r\n\r\nexport const incrementItem = (item) => ({\r\n    type: types.cartIncrementItem,\r\n    payload: {\r\n        ...item,\r\n        cant: (item.cant + 1)\r\n    }\r\n});\r\n\r\nexport const setStatus = () => ({\r\n    type: types.cartSetStatus\r\n});\r\n\r\nexport const deleteItems = () => ({\r\n    type: types.cartDeleteItems\r\n});","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { deleteItems } from '../actions/cart';\r\n\r\nexport const CartScreen = () => {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const handleReturn = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const goToBuy = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    const handleDeleteItems = () => {\r\n        dispatch(deleteItems());\r\n    }   \r\n\r\n    const {cartItems} = useSelector(state => state.cart);\r\n    let total = 0;\r\n\r\n    const returnText = '< Volver';\r\n\r\n    if(cartItems.length <= 0){\r\n        return (\r\n            <div className=\"cart-items-empty\">\r\n                <p onClick={handleReturn} className=\"return\"> {returnText} </p>\r\n                <h1 className=\"empty-text\">No hay productos</h1>\r\n                <div className=\"cart-buttons-empty\">\r\n                    <button \r\n                        className=\"card-button btn-block primary\"\r\n                        onClick={goToBuy}\r\n                    >\r\n                        Empezar a comprar\r\n                    </button>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"cart-items\">\r\n                <p onClick={handleReturn} className=\"return\"> {returnText} </p>\r\n                {\r\n                    cartItems.map(item => {\r\n                        total+=Number(item.price * item.cant);\r\n                        return (\r\n                            <p key={item.id}>{item.title} <strong>${item.price}</strong> {item.cant}</p>\r\n                        );\r\n                    })\r\n                }\r\n\r\n                <div className=\"cart-buttons\">\r\n                    <h1 className=\"cart-total\">Total: <strong>${total}</strong></h1>\r\n                    <button \r\n                        className=\"card-button outline-warning\"\r\n                        onClick={handleDeleteItems}\r\n                    >\r\n                        Vaciar carrito\r\n                    </button>\r\n                    <button className=\"card-button secondary\">\r\n                        Pagar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nimport { addItem, incrementItem } from '../actions/cart';\r\nimport { CartScreen } from './CartScreen';\r\n\r\n\r\nexport const ProductCard = ({id, title, description, price, img}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const {cartItems} = useSelector(state => state.cart);\r\n\r\n    const handleProductView = () => {\r\n        history.push(`/product/${id}`);\r\n    }\r\n\r\n    const handleAddItem = () => {\r\n        const item = cartItems.find(item => item.id === id);\r\n        if(!item){\r\n            dispatch(addItem({\r\n                id,\r\n                description,\r\n                title,\r\n                price,\r\n                img,\r\n                cant: 1\r\n            }));\r\n        }else{\r\n            dispatch(incrementItem(item));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\" >\r\n            <div className=\"\" onClick={handleProductView}>\r\n                <img src={img} alt=\"dark-galaxy\" loading=\"lazy\" className=\"card-img\" />\r\n            </div>\r\n            <div className=\"card-title\">\r\n                <h1>\r\n                    {title}\r\n                </h1>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <p>\r\n                    {description}\r\n                </p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                ${price}\r\n            </div>\r\n            <div className=\"card-buttons\">\r\n                <button className=\"card-button primary\">\r\n                    Comprar\r\n                </button>\r\n                <button \r\n                    className=\"card-button secondary\"\r\n                    onClick={handleAddItem}\r\n                >\r\n                    Agregar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport { ProductCard } from './ProductCard';\r\n\r\nexport const ProductsScreen = () => {\r\n\r\n    const {products} = useSelector(state => state.products);\r\n\r\n    return (\r\n        <div className=\"products-screen\">\r\n            <div className=\"search-box\">\r\n                <form \r\n                    className=\"search-form\"\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"search\"\r\n                        placeholder=\"Buscar...\"\r\n                        autoComplete=\"off\"\r\n                        className=\"search-input\"\r\n                    />\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"search-btn\"\r\n                    >\r\n                        Buscar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    products.map(product => (\r\n                        <ProductCard \r\n                            key={product.id}\r\n                            {...product}\r\n                        />       \r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { setStatus } from '../actions/cart';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {innerWidth: width, innerHeight: height} = window;\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const cartButton = () => {\r\n       if(width>768){\r\n           dispatch(setStatus());\r\n       }else{\r\n           history.push('/cart');\r\n       }\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <NavLink to=\"/\" className=\"navbar-link\">\r\n                <h1 className=\"navbar-title\">Apapachate Store</h1>\r\n            </NavLink>\r\n            <NavLink className=\"navbar-link navbar-carrito\" to=\"/cart\">\r\n                <img src=\"./shopping-cart.png\" alt=\"shopping cart\" className=\"cart-icon\" />\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addItem, incrementItem} from '../actions/cart';\r\n\r\nexport const ProductScreen = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleReturn = () => {\r\n        history.goBack();\r\n    }\r\n    const returnText = '< Volver';\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {products} = useSelector(state => state.products);\r\n    const {cartItems} = useSelector(state => state.cart);\r\n    const {id} = useParams();\r\n    const product = products.find(product => product.id === id);\r\n\r\n    if(!product){\r\n        return (\r\n            <p>\r\n                No hay nada para mostrar\r\n            </p>\r\n        )\r\n    }\r\n\r\n    const handleAddItem = () => {\r\n        const item = cartItems.find(item => item.id === id);\r\n        if(!item){\r\n            dispatch(addItem({\r\n                id: product.id,\r\n                description: product.description,\r\n                title: product.title,\r\n                price: product.price,\r\n                img: product.img,\r\n                cant: 1\r\n            }));\r\n        }else{\r\n            dispatch(incrementItem(item));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-screen\">\r\n            <p onClick={handleReturn} className=\"return\"> {returnText} </p>\r\n            <div className=\"product-card\">\r\n                <img src={product.img} alt=\"dark-galaxy\" className=\"product-img\" />\r\n            </div>\r\n            <div className=\"product-info\">\r\n                <div className=\"product-title\">\r\n                    <h1>\r\n                        {product.title}\r\n                    </h1>\r\n                </div>\r\n                <div className=\"product-desc\">\r\n                    <p>\r\n                        {product.description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"product-price\">\r\n                    <strong>\r\n                        ${product.price}\r\n                    </strong>\r\n                </div>\r\n                <div className=\"card-buttons\">\r\n                    <button className=\"card-button primary\">\r\n                        Comprar\r\n                    </button>\r\n                    <button className=\"card-button secondary\" onClick={handleAddItem}>\r\n                        Agregar\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDmkHLRdhIBItHiczxOoi_I3H8VL6WM5fE\",\r\n    authDomain: \"apapachatestore-c7d74.firebaseapp.com\",\r\n    projectId: \"apapachatestore-c7d74\",\r\n    storageBucket: \"apapachatestore-c7d74.appspot.com\",\r\n    messagingSenderId: \"538858354353\",\r\n    appId: \"1:538858354353:web:6f077aa8fc657e499dd490\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport {\r\n    db,\r\n    firebase\r\n}","import {db} from '../firebase/firebase-config';\r\n\r\nexport const loadProducts = async() => {\r\n    const productsSnap = await db.collection('productos').get();\r\n    const products = [];\r\n    productsSnap.forEach(snap => {\r\n        products.push({\r\n            id: snap.id,\r\n            ...snap.data()\r\n        });\r\n    });\r\n    return products;\r\n}","import {db} from '../firebase/firebase-config';\r\nimport { loadProducts } from '../helpers/loadProducts';\r\nimport { types } from '../types/types';\r\n\r\nexport const startGettingProducts = () => {\r\n    return async(dispatch) => {\r\n        const products = await loadProducts();\r\n        dispatch(setProducts(products));\r\n    }\r\n}\r\n\r\nexport const setProducts = (products) => ({\r\n    type: types.productSetItems,\r\n    payload: products\r\n});","import React, {useEffect} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { ProductsScreen } from '../components/ProductsScreen';\r\nimport {Navbar} from '../components/Navbar';\r\nimport { ProductScreen } from '../components/ProductScreen';\r\nimport { CartScreen } from '../components/CartScreen';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { setCartItems } from '../actions/cart';\r\nimport { startGettingProducts } from '../actions/products';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {cartItems, cartStatus} = useSelector(state => state.cart);\r\n\r\n    useEffect(() => {\r\n        const items = JSON.parse(localStorage.getItem('cartItems')) || [];\r\n        dispatch(startGettingProducts());\r\n        dispatch(setCartItems(items));\r\n    },[dispatch]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('cartItems', JSON.stringify(cartItems));\r\n    },[cartItems]);\r\n\r\n    return (\r\n        <Router>\r\n            <Navbar className=\"navbar\" />\r\n            <div>\r\n                <Switch>\r\n                    <Route path=\"/product/:id\" component={ProductScreen} />\r\n                    <Route path=\"/cart\" component={CartScreen} />\r\n                    <Route exact path=\"/\" component={ProductsScreen} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    cartItems: [],\r\n    cartStatus: false\r\n}\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case types.cartAddItem:\r\n            return {\r\n                ...state,\r\n                cartItems: [\r\n                    ...state.cartItems,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.cartSetItems:\r\n            return {\r\n                ...state,\r\n                cartItems: action.payload\r\n            }\r\n        case types.cartDeleteItems:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n        case types.cartSetStatus:\r\n            return {\r\n                ...state,\r\n                cartStatus: !state.cartStatus\r\n            }\r\n        case types.cartIncrementItem:\r\n            const index = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            const cartItems = [...state.cartItems];\r\n            cartItems[index] = action.payload;\r\n            return {\r\n                ...state,\r\n                cartItems\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    products: []\r\n}\r\n\r\nexport const productReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case types.productSetItems:\r\n            return {\r\n                ...state,\r\n                products: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import thunk from 'redux-thunk';\r\nimport {createStore, combineReducers, compose, applyMiddleware} from 'redux';\r\nimport {cartReducer} from '../reducers/cartReducer';\r\nimport { productReducer } from '../reducers/productsReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    cart: cartReducer,\r\n    products: productReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport './styles/styles.scss';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport {store} from './store/store';\r\n\r\nexport const AS = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AS } from \"./AS\";\n\nReactDOM.render( \n    < AS /> , \n    document.getElementById(\"root\")\n);"],"sourceRoot":""}